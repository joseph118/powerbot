package Tasks;

import Classes.Task;
import Classes.ClientContext;
import org.powerbot.script.Condition;
import org.powerbot.script.rt6.Npc;
import Classes.Methods;


import java.util.concurrent.Callable;

import static org.powerbot.script.Random.nextBoolean;

/**
 * Created by Joseph18 on 12/3/2014.
 */
public class Attack extends Task<ClientContext> {
    private int npcID;
    private int healthPercentageThreshold;
    public Attack(ClientContext ctx, int npcID, int healthPercentageThreshold){
        super(ctx);
        this.npcID = npcID;
        this.healthPercentageThreshold = healthPercentageThreshold;
    }

    @Override
    public boolean activate() {
        return !ctx.players.local().interacting().valid()
                && ctx.getHealth() > healthPercentageThreshold
                && ctx.combatBar.targetName() == ""
                && !ctx.players.local().inMotion();
    }

    @Override
    public void execute() {
        final Npc npc = ctx.npcs.select().select(Methods.nonCombatFilter).id(npcID).nearest().poll();

        // check underneath changed

        if (npc.inViewport()) {
            //System.out.println("Attacking NPC");
            ctx.camera.turnTo(npc);
            npc.interact("Attack");

            Condition.wait(new Callable<Boolean>() {
                @Override
                public Boolean call() throws Exception {
                    return !ctx.players.local().idle() || ctx.players.local().interacting().valid();
                }
            });

        } else {
            //System.out.println("Moving to NPC");
            ctx.movement.step(npc);

            Condition.wait(new Callable<Boolean>() {
                @Override
                public Boolean call() throws Exception {
                    return npc.inViewport();
                }
            }, 1000, 5);
        }
    }
}
